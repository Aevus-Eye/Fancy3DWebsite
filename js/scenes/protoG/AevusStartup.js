function drawStartup(t) {
	pixelModeLong = true
	/*cbpush(function(x,y,col,it){
		x-=y/(mouseY/height*10)
		setPixel(x,y,col,it)
	})*/
	/*cbpush(squishV.bind(null, 2 / 3, 0))
	cbpush(squishH.bind(null, 2 / 3, 64))
	drawText(64 + 0, 4 + 9 + 1, "abc", "white", AevusLogoFont)*/
	//drawChar(0,0,3,"white",AevusLogoFont)
	t=t%3.6
	t-=0.55;
	
	cbpush(function(x,y,col){//fade to black
		let a=(2.8-t)*2
		a=constrain(a,0,1);
		return color(red(col)*a, green(col)*a, blue(col)*a)
	})
	drawFilledCircle(64+16,16,min((t+0.55)*2*30,30),"white")
	cbpush(colorSUEnd.bind(null,(t-1.5)*100*2*2))//pruple shine
	drawSUAE(t);
	drawSUVU(t-0.25/2);
	drawSUS(t-0.25);
	cbpop(2)
	
	pixelModeLong = false;
}

function drawSUAE(t){
	let of=getPosOf(t);
	let rx=10+32+2+of.x;
	let ry=1+of.y
	cbpush(squishH.bind(null, of.s, rx))
	cbpush(squishV.bind(null, of.s, ry))
	cbpush(colorSU.bind(null,t))
	drawChar(rx,ry,97,"white",AevusLogoFont)
	cbpop(3)
}

function drawSUVU(t){
	let of=getPosOf(t);
	let rx=10+32+2+10+20+10-2-2;
	let ry=1+of.y
	cbpush(squishH.bind(null, of.s, rx))
	cbpush(squishV.bind(null, of.s, ry))
	cbpush(colorSU.bind(null,t))
	drawChar(rx,ry,98,"white",AevusLogoFont)
	cbpop(3)
}

function drawSUS(t){
	let of=getPosOf(t);
	let rx=10+32+2+60+10-3-1-1-of.x;
	let ry=1+of.y
	cbpush(squishH.bind(null, of.s, rx))
	cbpush(squishV.bind(null, of.s, ry))
	cbpush(colorSU.bind(null,t))
	drawChar(rx,ry,99,"white",AevusLogoFont)
	cbpop(3)
}

function getPosOf(t) {
	if(t>1)
		t=1
	return of={x:easeOutBack(t)*20, y:letterBounceUD(t)*10,s:map(t<0.7?easeInOutSineInv(t*(1/0.7)):0,0,1,2/3,1)}
}

function letterBounceUD(t) {
	let v;
	if (t < 0.35)
		v = easeOutCubicInv(t * (1 / 0.35))
	else
		v = easeOutBounce((t - 0.35) * (1 / 0.65)) ;
	return v ;
}

function easeOutBack(t) {
	const c1 = 1.70158;
	const c3 = c1 + 1;

	let r=1 + c3 * pow(t - 1, 3) + c1 * pow(t - 1, 2);
	
	if(r>1)
		r=(r-1)*2+1
	return r
}

function easeOutBounce(x) {
	const n1 = 7.5625;
	const d1 = 2.75;
	if (x < 1 / d1) {
		return n1 * x * x;
	} else if (x < 2 / d1) {
		x -= 1.5 / d1;
		return n1 * x * x + 0.75;
	} else if (x < 2.5 / d1) {
		x -= 2.25 / d1
		return n1 * x * x + 0.9375;
	} else {
		x -= 2.625 / d1
		return n1 * x * x + 0.984375;
	}
}

function easeOutCubicInv(x) {
	return pow(1 - x, 3);
}

function easeInOutSineInv(x) {
	return 1 - (cos(PI * x) - 1) / -2;
}

function colorSU(t,x,y,col){
	//hue_to_rgb
	//0-> 300/360
	//0.75 -=245/360 +1
	return color(hue_to_rgb(map(t,0,0.75,300/360,245/360+1,true)%1,));
}

function colorSUEnd(p,x,y,col){
	const yp=12;
	d=sqrt((x-p)*(x-p)+(y-yp)*(y-yp));
	d=80-d;
	d*=10/2;
	if(d<0)
		d=0;
	let r=red(col)+d;
	if(r>255){
		col.setGreen(green(col)+r-255)
		col.setBlue(blue(col)+r-255)
	}
	col.setRed(r)
	return col;
}








/***********************************************************************************
 * custom logo 19 px Font with 1 bpp
 ***********************************************************************************/

/*Store the image of the letters (glyph)*/
let AevusLogoFont_bitmap = [
	/* (Ã†) , Width: 22 */
	0b00000000, 0b01111111, 0b11111100,
	0b00000000, 0b01111111, 0b11111100,
	0b00000000, 0b11111111, 0b11111100,
	0b00000000, 0b11111100, 0b00000000,
	0b00000001, 0b11011100, 0b00000000,
	0b00000001, 0b11011100, 0b00000000,
	0b00000011, 0b10011100, 0b00000000,
	0b00000011, 0b10011100, 0b00000000,
	0b00000111, 0b11111111, 0b11111100,
	0b00000111, 0b11111111, 0b11111100,
	0b00001111, 0b11111111, 0b11111100,
	0b00001110, 0b00011100, 0b00000000,
	0b00011100, 0b00011100, 0b00000000,
	0b00011100, 0b00011100, 0b00000000,
	0b00111000, 0b00011100, 0b00000000,
	0b00111000, 0b00011100, 0b00000000,
	0b01110000, 0b00011111, 0b11111100,
	0b01110000, 0b00011111, 0b11111100,
	0b11100000, 0b00011111, 0b11111100,

	//12
	0b11100000, 0b01110000,
	0b11110000, 0b11110000,
	0b11110000, 0b11110000,
	0b01111001, 0b11100000,
	0b00111001, 0b11000000,
	0b00011111, 0b10000000,
	0b00011111, 0b10000000,
	0b00001111, 0b00000000,
	0b00001111, 0b00000000,
	0b11100110, 0b01110000,
	0b11100000, 0b01110000,
	0b11100000, 0b01110000,
	0b11100000, 0b01110000,
	0b11100000, 0b01110000,
	0b11100000, 0b01110000,
	0b11110000, 0b11110000,
	0b01111111, 0b11100000,
	0b01111111, 0b11100000,
	0b00011111, 0b10000000,

	//10
	0b00011111, 0b11000000,
	0b00111111, 0b11000000,
	0b01111111, 0b11000000,
	0b01110000, 0b00000000,
	0b11100000, 0b00000000,
	0b11100000, 0b00000000,
	0b11100000, 0b00000000,
	0b01110000, 0b00000000,
	0b01111110, 0b00000000,
	0b00111111, 0b00000000,
	0b00011111, 0b10000000,
	0b00000011, 0b10000000,
	0b00000001, 0b11000000,
	0b00000001, 0b11000000,
	0b00000001, 0b11000000,
	0b00000011, 0b10000000,
	0b11111111, 0b10000000,
	0b11111111, 0b00000000,
	0b11111110, 0b00000000,

]



/*Store the glyph descriptions*/
let AevusLogoFont_glyph_dsc = [{
		w_px: 22,
		glyph_index: 0
	},
	{
		w_px: 12,
		glyph_index: 19 * 3
	},
	{
		w_px: 10,
		glyph_index: 19 * 5
	},
];

let AevusLogoFont = {
	unicode_first: 97,
	/*First Unicode letter in this font*/
	unicode_last: 99,
	/*Last Unicode letter in this font*/
	h_px: 19,
	/*Font height in pixels*/
	glyph_bitmap: AevusLogoFont_bitmap,
	/*Bitmap of glyphs*/
	glyph_dsc: AevusLogoFont_glyph_dsc,
	/*Description of glyphs*/
	glyph_cnt: 3,
	/*Number of glyphs in the font*/

	space_width: 7,
	space_between_chars: 2,
};















//temp file dump
/*

let AevusLogoFont_bitmap = 
[
  0b00000000,0b00000000,0b00000000,  //.........2222222222222..
  0b00000000,0b00000000,0b00000000,  //.........2222222222222..
  0b00000000,0b00000000,0b00000000,  //........22222222222222..
  0b00000000,0b00000000,0b00000000,  //........222222..........
  0b00000000,0b00000000,0b00000000,  //.......222.222..........
  0b00000000,0b00000000,0b00000000,  //.......222.222..........
  0b00000000,0b00000000,0b00000000,  //......222..222..........
  0b00000000,0b00000000,0b00000000,  //......222..222..........
  0b00000000,0b00000000,0b00000000,  //.....22333322233333333..
  0b00000000,0b00000000,0b00000000,  //.....22333322233333333..
  0b00000000,0b00000000,0b00000000,  //....222333322233333333..
  0b00000000,0b00000000,0b00000000,  //....222....222..........
  0b00000000,0b00000000,0b00000000,  //...222.....222..........
  0b00000000,0b00000000,0b00000000,  //...222.....222..........
  0b00000000,0b00000000,0b00000000,  //..222......222..........
  0b00000000,0b00000000,0b00000000,  //..222......222..........
  0b00000000,0b00000000,0b00000000,  //.222.......22222222222..
  0b00000000,0b00000000,0b00000000,  //.222.......22222222222..
  0b00000000,0b00000000,0b00000000,  //888........22222222222..
  
  
  
  
  
  
0b00000000, 0b01111111, 0b11111100, 
0b00000000, 0b01111111, 0b11111100, 
0b00000000, 0b11111111, 0b11111100, 
0b00000000, 0b11111100, 0b00000000, 
0b00000001, 0b11011100, 0b00000000, 
0b00000001, 0b11011100, 0b00000000, 
0b00000011, 0b10011100, 0b00000000, 
0b00000011, 0b10011100, 0b00000000, 
0b00000111, 0b11111111, 0b11111100, 
0b00000111, 0b11111111, 0b11111100, 
0b00001111, 0b11111111, 0b11111100, 
0b00001110, 0b00011100, 0b00000000, 
0b00011100, 0b00011100, 0b00000000, 
0b00011100, 0b00011100, 0b00000000, 
0b00111000, 0b00011100, 0b00000000, 
0b00111000, 0b00011100, 0b00000000, 
0b01110000, 0b00011111, 0b11111100, 
0b01110000, 0b00011111, 0b11111100, 
0b11100000, 0b00011111, 0b11111100, 
  
  
  
  
  //9....000......000...........................
  //9....0000....0000............................
  //9....0000....0000............................
  //......0000..0000.............................
  //.......000..000.............................
  //........000000..............................
  //........000000..............................
  //.........0000...............................
  //9........0000...............................
  //9....000..00..000...........................
  //9....000......000...........................
  //.....000......000...........................
  //.....000......000...........................
  //.....000......000...........................
  //.....000......000...........................
  //.....0000....0000...........................
  //9.....0000000000..........................
  //9.....0000000000..........................
  //9.......000000............................
  
  ([01]{8})
  0b$1, 
//width 12
0b11100000, 0b01110000, 
0b11110000, 0b11110000, 
0b11110000, 0b11110000, 
0b01111001, 0b11100000, 
0b00111001, 0b11000000, 
0b00011111, 0b10000000, 
0b00011111, 0b10000000, 
0b00001111, 0b00000000, 
0b00001111, 0b00000000, 
0b11100110, 0b01110000, 
0b11100000, 0b01110000, 
0b11100000, 0b01110000, 
0b11100000, 0b01110000, 
0b11100000, 0b01110000, 
0b11100000, 0b01110000, 
0b11110000, 0b11110000, 
0b01111111, 0b11100000, 
0b01111111, 0b11100000, 
0b00011111, 0b10000000, 
  
  
  //9.......0000000......................................
  //9......00000000.......................................
  //9.....000000000.......................................
  //......000.............................................
  //.....000.............................................
  //.....000.............................................
  //.....000.............................................
  //......000............................................
  //9.....000000.........................................
  //9......000000........................................
  //9.......000000.......................................
  //...........000.......................................
  //............000......................................
  //............000......................................
  //............000......................................
  //...........000.......................................
  //9....000000000............................................
  //9....00000000.............................................
  //9....0000000..............................................
  
//10
0b00011111, 0b11000000, 
0b00111111, 0b11000000, 
0b01111111, 0b11000000, 
0b01110000, 0b00000000, 
0b11100000, 0b00000000, 
0b11100000, 0b00000000, 
0b11100000, 0b00000000, 
0b01110000, 0b00000000, 
0b01111110, 0b00000000, 
0b00111111, 0b00000000, 
0b00011111, 0b10000000, 
0b00000011, 0b10000000, 
0b00000001, 0b11000000, 
0b00000001, 0b11000000, 
0b00000001, 0b11000000, 
0b00000011, 0b10000000, 
0b11111111, 0b10000000, 
0b11111111, 0b00000000, 
0b11111110, 0b00000000, 
  
  
  

]

*/